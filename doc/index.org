#+TITLE: Quicksnips
#+EMAIL: nil
#+LINK: qs http://quicksnips.dunsmor.com/
#+OPTIONS: toc:2
#+STYLE: <link rel="stylesheet" type="text/css" href="/quicksnips.css" />
* Intro

Quicksnips allows you to have access to a large number of one-liners
and makes them available for use on remote systems without having to
cut and paste.  Dmenu is the interface, which makes it easy to manage
thousands of menu items quickly, since it dynamically narrows down
results based on your keystrokes.  Dmenu cats the output of the
one-liners into xclip, then xdotool mimics the middle mouse button to
paste the output of your one-liner into the remote server without
executing it, so that you can modify it before executing.

[TABLE-OF-CONTENTS]

* Obtaining quicksnips

To download the latest development version, use:

: git clone git://github.com/jasondunsmore/quicksnips.git

You can also browse the repository at:
https://github.com/jasondunsmore/quicksnips

To browse source-highlighted versions of the snippets, visit:
http://quicksnips.dunsmor.com/snippets/

* Project layout

| Directory | Description                      |
|-----------+----------------------------------|
| [[https://github.com/jasondunsmore/quicksnips/tree/master/bin][bin/]]      | quicksnips scripts               |
| [[https://github.com/jasondunsmore/quicksnips/tree/master/conf][conf/]]     | quicksnips configuration files   |
| [[https://github.com/jasondunsmore/quicksnips/tree/master/doc][doc/]]      | quicksnips documentation         |
| [[https://github.com/jasondunsmore/quicksnips/tree/master/snippets][snippets/]] | Code snippets                    |
| [[https://github.com/jasondunsmore/quicksnips/tree/master/remote][remote/]]   | Scripts that are called remotely |

* Demo

Run quicksnips:

[[file:demo1.png]]

...and a menu will appear with all the quicksnips for you to choose from:

[[file:demo2.png]]

Start typing a word in the quicksnip name and hit Enter:

[[file:demo3.png]]

The quicksnip will appear in the terminal:

[[file:demo4.png]]

* Installation
** Requirements

- [[http://www.suckless.org/programs/dmenu.html][dmenu]]
- [[http://www.semicomplete.com/projects/xdotool/][xdotool]]
- [[http://sourceforge.net/projects/xclip][xclip]]
- [[http://git-scm.com/download][git]]

** Install quicksnips and dependencies

If you're using Debian or Ubuntu, all dependencies can be installed
with apt-get:

: apt-get install suckless-tools xdotool xclip git

For Fedora, you may have to download the packages from the project
websites.

Clone the quicksnips git repository:

: cd ~
: git clone git://github.com/jasondunsmore/quicksnips.git

Put =~/quicksnips/bin= in your =$PATH=.  For example, your =~./bashrc=
or =~/.bash_profile= file might contain:

: export PATH=$PATH:$HOME/bin:$HOME/quicksnips/bin

** Determine how you will run the quicksnips command

: Usage: ./quicksnips [-e] [-i] [-p] [-x] [-s SNIPDIR] [SNIPPET]...
: 
: Optional arguments.
:   -h  Print this help message.
:   -e  Show documentation in Emacs.
:   -i  Use Shift + Insert to paste the x-selection buffer.
:   -p  Preserve newlines and comments.
:   -s  Specify alternate snippet directory.
:   -x  Show documentation in Xdialog.

*** Displaying documentation

To display documentation in Emacs when a script is selected, use
=quicksnips -e= and put the following in your .emacs file:

: (load "~/quicksnips/conf/quicksnips-doc.el)

Alternatively, you can display documentation in Xdialog when a script
is selected using =quicksnips -x=.

** Bind the quicksnips command to a global keybinding
*** Gnome (Metacity)

Create a keybinding for the =quicksnips= command by running
=~/quicksnips/bin/quickconfig=.  For example, run the following to
bind quicksnips to F1:

: quickconfig F1

*** Compiz

Add a keybinding using the CompizConfig Settings Manager.  It's
available under:

: Settings -> Preferences -> CompizConfig Settings Manager

- Set =Command0= to =/path/to/quicksnips/bin/quicksnips=.
- Set a keybinding to run =Command0=.

*** KDE

Use kmenuedit to create a new menu item which calls the quicksnips
script and then apply a keyboard shortcut to it.

*** Sawfish

Example sawfish configuration can be found in the
[[qs:conf/quicksnips-keys.jl][=conf/quicksnips-keys.jl=]].

To use that sawfish configuration, simply add the following to your
=~/.sawfishrc= file:

: (load-file "~/quicksnips/conf/quicksnips-keys.jl")

*** Ratpoison

Example configuration:

: bind d exec quicksnips

*** Windowmaker

- Edit ~/GNUstep/Defaults/WMRootMenu
- Add a line like this:

: ("Quicksnips", SHORTCUT, F10, EXEC, "~/quicksnips/bin/quicksnips"),

- You must execute it once through the menu, from there on out use
  F10.

*** Xmonad

- Edit ~/.xmonad/xmonad.hs
- Add the following line under the Key bindings section:

: -- launch quicksnips
: , ((modMask,               xK_s     ), spawn "exe=`~/quicksnips/bin/quicksnips`; eval \"exec $exe\"")

- Restart xmonad (mod-q)

** Configuration for Emacs users
*** Shell-mode

Since the snippet files don't end in .sh, the following should be
added to .emacs to enable sh-mode for all buffers visiting snippets
files.

: (setq auto-mode-alist (append
: 		       '((".*quicksnips.*" . sh-mode))
: 		       auto-mode-alist))

*** Emacs-like keybindings

For examples of configuring Emacs-like keybindings for specific
snippets in Sawfish, view [[qs:conf/quicksnips-keys.jl][=quicksnips-keys.jl=]].

| Key     | Binding                       |
|---------+-------------------------------|
| M-S-s   | quicksnips                    |
| C-z     | Prefix Command                |
| C-z z   | C-z                           |
| C-z a   | Prefix Command                |
| C-z a b | quicksnips apache-buddy       |
| C-z a g | quicksnips apache-log-growers |
| C-z e   | quicksnips install-emacs      |
| C-z f   | Prefix Command                |
| C-z f b | quicksnips file-backup        |
| C-z g   | Prefix Command                |
| C-z g c | quicksnips git-commit-push    |
| C-z m   | Prefix Command                |
| C-z m m | quicksnips mysql-memory       |
| C-z o   | quicksnips server-overview    |
| C-z u   | quicksnips get-public-ip      |
| C-z s   | Prefix Command                |
| C-z s c | quicksnips sar-recent-cpu     |
| C-z s l | quicksnips sar-recent-load    |
| C-z s m | quicksnips sar-recent-memory  |

** Cron job for new updates

#+begin_example
0 0 * * * cd ~/quicksnips; git pull
#+end_example

* Contributing
** Naming convention

Scripts should be named with the most general descriptor
first. Descriptors should be separated by hyphens.

** Scripting conventions

Scripts that would be too convoluted as a one-liner should be put in a
bash function so they will not execute automatically.  Example:
[[qs:snippets/qmail-queues-top-report.html][qmail-queues-top-report]].

Scripts with arguments that are buried in the middle of the line
should use a bash function to move arguments to the end of the line.
Example: [[qs:snippets/iptables-drop-ips.html][iptables-drop-ips]].

Comments should describe what the script does and give an example of
the script output (when applicable).  Example:
[[qs:snippets/apache-accesses-per-day.html][apache-accesses-per-day]].
