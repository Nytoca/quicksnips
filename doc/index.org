#+TITLE: quicksnips
#+LINK: qs http://quicksnips.org/quicksnips/

* Intro
Quicksnips allows you to have access to a large number of one-liners
and makes them available for use on remote systems without having to
cut & paste.  Dmenu is the interface, which makes it easy to manage
thousands of menu items quickly, since it dynamically narrows down
results based on your keystrokes.  Dmenu cats the output of the
one-liners into xclip, then xdotool mimics Shift-Insert to paste the
output of your one-liner into the remote server without executing it,
so that you can modify it before executing.

* Obtaining quicksnips
To download quicksnips from the public git repository, use:

: git clone git://quicksnips.org/git/quicksnips

You can also browse the repository at:
http://quicksnips.org/quicksnips/

* Project layout
| Directory | Description                                           |
|-----------+-------------------------------------------------------|
| [[qs::bin/][bin/]]      | quicksnips scripts                                    |
| [[qs::conf/][conf/]]     | quicksnips configuration files                        |
| [[qs::debian/][debian/]]   | Debian shell snippets                                 |
| [[qs:doc/][doc/]]      | quicksnips documentation                              |
| [[qs::bsd][bsd/]]      | FreeBSD shell snippets                                |
| [[qs:linux][linux/]]    | Shell snippets that run on any GNU/Linux distribution |
| [[qs::remote][remote/]]   | Scripts that are called remotely                      |
| [[qs::rhel/][rhel/]]     | RHEL (Red Hat Enterprise Linux) shell snippets        |

* Installation
** Requirements
- [[http://www.suckless.org/programs/dmenu.html][dmenu]]
- [[http://www.semicomplete.com/projects/xdotool/][xdotool]]
- [[http://sourceforge.net/projects/xclip][xclip]]
- [[http://git-scm.com/download][git]]

** Install quicksnips and dependencies
If you're using Debian, everything can be installed with apt-get:

: apt-get install dmenu xdotool xclip git-core

Clone the quicksnips git repository:

: cd ~
: git clone git://quicksnips.org/git/quicksnips

Put the quicksnips script in your $PATH:

: ln -s ~/quicksnips/bin/quicksnips ~/bin

** Determine how you will run quicksnips command

: $ quicksnips -h
: Usage: ./quicksnips [-m] [-e] [-x] [-s SNIPPET] [SNIPDIR]...
: 
: Optional arguments.
:   -h  Print this help message.
:   -m  Use the middle mouse button to paste the x-selection buffer.
:   -e  Show documentation in Emacs.
:   -x  Show documentation in Xdialog.

*** KDE users
Since "Shift + Insert" is bound to the copy/paste buffer in KDE,
the shortcut should call =quicksnips -m=, which uses the middle mouse
button to paste the x selection buffer.

*** Displaying documentation
To display documentation in Emacs when a script is selected, use
=quicksnips -e= and put the following in your .emacs file:

: (load "~/quicksnips/conf/quicksnips-doc.el)

Alternatively, you can display documentation in Xdialog when a script
is selected using =quicksnips -x=.

*** Snippets to display in dmenu
Without any arguments, quicksnips will display the snippet directories
defined by the =snipdirs= variable in the quicksnips script.  By
default, this is set to display all snippets directories:

: linux rhel debian bsd

This can be customized by editing the =snipdirs= variable at the top
of the [[qs::bin/quicksnips][=quicksnips=]] script.

To have quicksnips only display one or two snippets directories, then
only pass the name of those directories to the script.  For example:

: quicksnips rhel

or

: quicksnips linux rhel

I would suggest having a keybinding for =quicksnips linux rhel= for
use on RHEL systems and a =quicksnips linux debian= keybinding for use
on Debian systems.

** Bind the quicksnips script to a keybinding in your window manager
*** Gnome (Metacity)
Install and run gconf-editor, then create a keybinding for the
=quicksnips= command under:

: apps -> metacity -> keybinding_commands

...and bind it to a key under:

: apps -> metacity -> global keybindings.

[[http://www.electricmonk.nl/log/2007/08/02/gnomemetacity-keybindings-and-other-customizations/][More detailed instructions]]

*** KDE
Use kmenuedit to create a new menu item and then apply a shortcut to
it.

*** Sawfish

Add the following to your =~/.sawfishrc= file:

: (load-file "~/quicksnips/conf/quicksnips-keys.jl")

View [[qs::conf/quicksnips-keys.jl][=quicksnips-keys.jl=]] for additional Sawfish examples, including
configuration of Emacs-like keybindings.

*** Ratpoison
: bind d exec /home/mattb/scripts/quicksnips

* Contributing
For write access to the git repository, email file:jason.png

** Naming convention
Scripts should be named with the most general descriptor
first. Descriptors should be separated by hyphens.

** Scripting conventions
Multi-line scripts should end with "\" (backslash) so bash treats them
as the same line. This will prevent scripts from executing
automatically.

Comments should describe what the script does and give an example of
the script output (when applicable).

Scripts with arguments that are buried in the middle of the line
should use a bash function to move arguments to the end of the line.
For example:

: function dropips () { for ip in $*; do iptables -I INPUT -s $ip -j DROP; done && iptables -L }; dropips

* Feedback
Send suggestions or bug reports to file:feedback.png
