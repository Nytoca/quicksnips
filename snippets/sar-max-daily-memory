# Prints out memory usage history (minus the disk cache).
#
# Example output:
# 
# Max Daily Memory Usage
# (total memory 2026 MB)
# ===============================
# 
#   17 Sep 2009
#     Time RAM used
# 06:30:01 1099.78 MB
# 06:10:01 1098.70 MB
# 06:20:01 1093.96 MB
# 01:10:01 1069.83 MB
# 04:30:01 1067.81 MB
# 19:30:01 1067.22 MB
# 04:20:01 1066.01 MB
# 05:30:02 1065.98 MB
# 23:00:01 1065.48 MB
# 04:40:01 1065.20 MB
# 
#   18 Sep 2009
#     Time RAM used
# 06:10:02 1081.86 MB
# 06:30:01 1081.68 MB
# 06:20:01 1080.54 MB
# 00:30:01 1018.30 MB
# 02:10:01 1017.07 MB
# [...]

function sar_max_daily_memory () {
    memavail=$(free -m | grep "Mem:" | awk '{print $2 " MB"}')
    printf "Max Daily Memory Usage\n(total memory $memavail)\n===============================\n"
    for file in /var/log/sa/sa[0-9]*; do
        date=$( date -d$(stat $file | awk '/Change/ {print $2}') +"%d %b %Y" )
        printf "\n  $date\n    Time RAM used\n"
        if [ -e "/usr/bin/sadf" ]; then
            exe="sadf -d -- -r $file"
        else
            exe="sar -r -H -f $file"
        fi
        eval $exe | cut -d";" -f3,5,8 | sed 's/;/ /g' | awk '{printf "%s %.2f MB\n", $2, ($4-$5)/1024}' | sort -k2 -nr | head -n5
    done
}
sar_max_daily_memory
